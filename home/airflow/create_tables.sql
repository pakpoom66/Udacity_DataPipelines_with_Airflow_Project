CREATE TABLE IF NOT EXISTS staging_events 
(
  artist VARCHAR,
  auth VARCHAR,
  firstName VARCHAR,
  gender VARCHAR,
  itemInSession INT,
  lastName VARCHAR,
  length NUMERIC,
  level VARCHAR,
  location VARCHAR,
  method VARCHAR,
  page VARCHAR,
  registration NUMERIC,
  sessionId INT,
  song VARCHAR,
  status INT,
  ts NUMERIC,
  userAgent VARCHAR,
  userId INT
);

CREATE TABLE IF NOT EXISTS staging_songs
(       
  num_songs INT,
  artist_id VARCHAR,
  artist_latitude NUMERIC,
  artist_longitude NUMERIC,
  artist_location VARCHAR,
  artist_name VARCHAR,
  song_id VARCHAR,
  title VARCHAR,
  duration NUMERIC,
  year INT
);

CREATE TABLE IF NOT EXISTS users 
(
  user_id INT PRIMARY KEY sortkey distkey, 
  first_name VARCHAR, 
  last_name VARCHAR, 
  gender VARCHAR, 
  level VARCHAR
);

CREATE TABLE IF NOT EXISTS songs 
(
  song_id VARCHAR PRIMARY KEY sortkey distkey, 
  title VARCHAR, 
  artist_id VARCHAR NOT NULL, 
  year INT, 
  duration NUMERIC
);

CREATE TABLE IF NOT EXISTS artists 
(
  artist_id VARCHAR PRIMARY KEY sortkey distkey, 
  name VARCHAR, 
  location VARCHAR, 
  latitude NUMERIC, 
  longitude NUMERIC
);

CREATE TABLE IF NOT EXISTS time 
(
  start_time TIMESTAMP PRIMARY KEY sortkey distkey, 
  hour INT, 
  day INT, 
  week INT, 
  month INT, 
  year INT, 
  weekday INT
);

CREATE TABLE IF NOT EXISTS songplays  
(
  songplay_id INT GENERATED BY DEFAULT AS IDENTITY(0,1) PRIMARY KEY sortkey distkey, 
  start_time TIMESTAMP NOT NULL REFERENCES time (start_time), 
  user_id INT NOT NULL REFERENCES users (user_id), 
  level VARCHAR, 
  song_id VARCHAR, 
  artist_id VARCHAR, 
  session_id INT, 
  location VARCHAR, 
  user_agent VARCHAR
);